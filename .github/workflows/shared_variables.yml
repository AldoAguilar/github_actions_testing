# How to Share data between Jobs using Artifacts (files)? -> https://docs.github.com/en/actions/learn-github-actions/essential-features-of-github-actions#sharing-data-between-jobs
# How to define Job outputs? -> https://docs.github.com/en/actions/learn-github-actions/contexts#example-usage-of-the-jobs-context
# How to define Step outputs? -> https://docs.github.com/en/actions/learn-github-actions/contexts#steps-context
# How to define outputs por Jobs and Consume them in another dependent Job? -> https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs
# How to add and use a script (at the repository) in a workflow? -> https://docs.github.com/en/actions/learn-github-actions/essential-features-of-github-actions#adding-scripts-to-your-workflow
# Storing workflow data as artifacts (files) -> https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts
# Artifact and log retention policy -> https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#artifact-and-log-retention-policy

# How to use "workflow_dispatch" event to set Action input values? -> https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
# How to manually run a workflow using GitHub Web Interface? -> https://docs.github.com/en/actions/using-workflows/manually-running-a-workflow?tool=webui
# How to manually run a workflow using GitHub CLI? -> https://docs.github.com/en/actions/using-workflows/manually-running-a-workflow?tool=cli
# Use the input context to consume the worlow input values? -> https://docs.github.com/en/actions/learn-github-actions/contexts#inputs-context

# Use expressions for logical comparisson, string processing, JSON fromatting, workflow status checks, etc? -> https://docs.github.com/en/actions/learn-github-actions/expressions
name: Test
on: 
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: string
        required: true
      digit:
        description: 'A number input'
        type: number
        required: true
jobs:
  job1:
    name: Job 1
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.step1_variable_2 }}
      output2: ${{ steps.step2.outputs.step2_variable }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Setup Python
        id: python
        uses: actions/setup-python@v4.7.1
      - name: Generate Step 1 Outputs (10 & 11)
        id: step1
        run: |
          echo "step1_variable_1=10" >> $GITHUB_OUTPUT
          echo "step1_variable_2=11" >> $GITHUB_OUTPUT
      - id: step2
        name: Display Step 1 Outputs (10 & 11) and Generate Step 2 Output (12)
        run: |
          echo "Step 1 variable 1 is ${{steps.step1.outputs.step1_variable_1}}"
          echo "Step 1 variable 2 is ${{steps.step1.outputs.step1_variable_2}}"
          echo "step2_variable=12" >> $GITHUB_OUTPUT
          
      - name: Python "share_complex_data.py" as Executable
        run: chmod +x scripts/share_complex_data.py
      - name: Generate Complex Data from Python
        shell: bash
        run: python scripts/share_complex_data.py > output.log
      - name: Share Complex Data as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: output-file
          path: output.log
      - name: Download Complex Data Between Steps
        uses: actions/download-artifact@v3
        with:
          name: output-file
      - name: Print downloaded Complex Data
        run: cat output.log
  job2:
    name: Job 2
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Setup Python
        id: python
        uses: actions/setup-python@v4.7.1
      - name: Print Shared Variables from Job 1
        run: |
          echo "Job 1 output 1 is ${{needs.job1.outputs.output1}}"
          echo "Job 1 output 2 is ${{needs.job1.outputs.output2}}"
      - name: Python "consume_variables.py" as Executable
        run: chmod +x scripts/consume_variables.py
      - name: Consume Shared Varibles with Python
        run: |
          python scripts/consume_variables.py ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}
      - name: Download Complex Data Between Jobs
        uses: actions/download-artifact@v3
        with:
          name: output-file
      - name: Print downloaded Complex Data
        run: cat output.log
  job3:
    name: Job 3
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Log level: $LEVEL"
          echo "Tags: $TAGS"
          echo "Environment: $ENVIRONMENT"
          echo "Number: ${{ toJSON(inputs.digit) }}"
        env:
          LEVEL: ${{ inputs.logLevel }}
          TAGS: ${{ inputs.tags }}
          ENVIRONMENT: ${{ inputs.environment }}
    
